-- example1
-- (x, y)という1つのタプルを引数として受け取っているため、addは引数を1つとる関数

add :: (Int, Int) -> Int
add (x, y) = x + y

-- *Main> add (1,2)
-- 3

-- example2
-- 以下2つは同じ
-- add'はxという引数を受け取って（yという引数を受け取る）関数を返す関数
-- add'はx, yという2つの引数を受け取る関数
-- カリー化では、「2つの引数を受け取る関数」と「1つの引数を受けとり（1つの引数を受け取る）関数を返す関数」を同一視する

add' :: Int -> (Int -> Int)
add' x = (\ y -> x + y)

-- Int -> Int -> Int と　Int -> (Int -> Int) は同じため、以下と実行結果は同じとなる
-- add' x y = x + y

-- *Main> add' 1 2
-- 3
